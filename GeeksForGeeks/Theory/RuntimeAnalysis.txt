Runtime Complexity Analysis:

Θ Notation:
Bounds the function from above and below and defines the bounds of a function's runtime. 
Θ notation finds a function g(n) and 3 constants: c1, c2 and n0 where 0 <= c1*g(n) <= f(n) <= c2*g(n) for all n >= n0
Θ notation is also called the tight bound.

O Notation:
Upper bound of an algorithm, what is the worst case runtime.
In the case of if else statements, we pick the route that will lead to the worst time complexity.
Loop that iterates a constant number of items (not based on input size) will have a constant time, rather then O(n) complexity

Ω Notation: 
Lower bound of an algorithm, what is the best case runtime.

Links;
https://www.youtube.com/watch?v=6Ol2JbwoJp0 - Asymptotic Analysis Video
https://www.youtube.com/watch?v=iOq5kSKqeR4 - Asymptotic Analysis CS50
https://www.youtube.com/watch?v=aGjL7YXI31Q - Great explanation by Rav